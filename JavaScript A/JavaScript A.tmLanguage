<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
	<dict>
		<key>scopeName</key>
		<string>source.js</string>
		<key>fileTypes</key>
		<array>
			<string>js</string>
			<string>_js</string>
			<string>es</string>
			<string>es6</string>
			<string>gs</string>
			<string>htc</string>
			<string>jscad</string>
			<string>jsm</string>
			<string>json5</string>
			<string>pac</string>
			<string>pjs</string>
			<string>xsjs</string>
			<string>xsjslib</string>
		</array>
		<key>firstLineMatch</key>
		<string>^#!.*\b(node|iojs|JavaScript)</string>
		<key>name</key>
		<string>JavaScript A</string>
		<key>patterns</key>
		<array>
			<dict>
				<key>comment</key>
				<string>ES6 import</string>
				<key>begin</key>
				<string>(?&lt;!\.)\b(import)(?!\s*:)\b</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.js</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>{ member1 , member2 as alias2 , [...] }</string>
						<key>begin</key>
						<string>\{</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.modules.begin.js</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\}</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.modules.end.js</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>comment</key>
								<string>(default|name) as alias</string>
								<key>captures</key>
								<dict>
									<key>1</key>
									<dict>
										<key>name</key>
										<string>variable.language.default.js</string>
									</dict>
									<key>2</key>
									<dict>
										<key>name</key>
										<string>variable.other.module.js</string>
									</dict>
									<key>3</key>
									<dict>
										<key>name</key>
										<string>keyword.control.js</string>
									</dict>
									<key>4</key>
									<dict>
										<key>name</key>
										<string>invalid.illegal.js</string>
									</dict>
									<key>5</key>
									<dict>
										<key>name</key>
										<string>variable.other.module-alias.js</string>
									</dict>
								</dict>
								<key>match</key>
								<string>(?x) (?: \b(default)\b | \b([a-zA-Z_$][a-zA-Z_$0-9]*)\b) \s* (\b as \b) \s* (?: (\b default \b | \*) | \b([a-zA-Z_$][a-zA-Z_$0-9]*)\b)</string>
							</dict>
							<dict>
								<key>match</key>
								<string>,</string>
								<key>name</key>
								<string>meta.delimiter.object.comma.js</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#comments</string>
							</dict>
							<dict>
								<key>match</key>
								<string>\b([a-zA-Z_$][a-zA-Z_$0-9]*)\b</string>
								<key>name</key>
								<string>variable.other.module.js</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>comment</key>
						<string>(default|*|name) as alias</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>variable.language.default.js</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>variable.language.import-all.js</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>variable.other.module.js</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>keyword.control.js</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>invalid.illegal.js</string>
							</dict>
							<key>6</key>
							<dict>
								<key>name</key>
								<string>variable.other.module-alias.js</string>
							</dict>
						</dict>
						<key>match</key>
						<string>(?x) (?: \b(default)\b | (\*) | \b([a-zA-Z_$][a-zA-Z_$0-9]*)\b) \s* (\b as \b) \s* (?: (\b default \b | \*) | \b([a-zA-Z_$][a-zA-Z_$0-9]*)\b)</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\*</string>
						<key>name</key>
						<string>variable.language.import-all.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\b(default)\b</string>
						<key>name</key>
						<string>variable.language.default.js</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#strings</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#comments</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\b(from)\b</string>
						<key>name</key>
						<string>keyword.control.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\b([a-zA-Z_$][a-zA-Z_$0-9]*)\b(?=.*\bfrom\b)</string>
						<key>name</key>
						<string>variable.other.module.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>,</string>
						<key>name</key>
						<string>meta.delimiter.object.comma.js</string>
					</dict>
				</array>
				<key>end</key>
				<string>(?=;|$)</string>
				<key>name</key>
				<string>meta.import.js</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>ES6 export: `export default (variable|class|function, etc.)`</string>
				<key>match</key>
				<string>(?x) \b(export)\b \s* \b(default)\b (?:\s*) \b((?!\bfunction\b|\bclass\b|\blet\b|\bvar\b|\bconst\b)[a-zA-Z_$][a-zA-Z_$0-9]*)?\b</string>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>meta.export.js</string>
					</dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>variable.language.default.js</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>variable.other.module.js</string>
					</dict>
				</dict>
			</dict>
			<dict>
				<key>comment</key>
				<string>ES6 export, re-export: `export {member as alias, [...]} [from ...]`</string>
				<key>begin</key>
				<string>(?&lt;!\.)\b(export)(?!\s*:)\b</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.js</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#numbers</string>
					</dict>
					<dict>
						<key>comment</key>
						<string>`{ member1 , member2 as alias2 , [...] }` inside re-export</string>
						<key>begin</key>
						<string>\{(?=.*\bfrom\b)</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.modules.begin.js</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\}</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.modules.end.js</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>comment</key>
								<string>(default|name) as alias</string>
								<key>captures</key>
								<dict>
									<key>1</key>
									<dict>
										<key>name</key>
										<string>variable.language.default.js</string>
									</dict>
									<key>2</key>
									<dict>
										<key>name</key>
										<string>variable.other.module.js</string>
									</dict>
									<key>3</key>
									<dict>
										<key>name</key>
										<string>keyword.control.js</string>
									</dict>
									<key>4</key>
									<dict>
										<key>name</key>
										<string>variable.language.default.js</string>
									</dict>
									<key>5</key>
									<dict>
										<key>name</key>
										<string>invalid.illegal.js</string>
									</dict>
									<key>6</key>
									<dict>
										<key>name</key>
										<string>variable.other.module-alias.js</string>
									</dict>
								</dict>
								<key>match</key>
								<string>(?x) (?: \b(default)\b | \b([a-zA-Z_$][a-zA-Z_$0-9]*)\b) \s* (\b as \b) \s* (?: \b(default)\b | (\*) | \b([a-zA-Z_$][a-zA-Z_$0-9]*)\b)</string>
							</dict>
							<dict>
								<key>match</key>
								<string>,</string>
								<key>name</key>
								<string>meta.delimiter.object.comma.js</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#comments</string>
							</dict>
							<dict>
								<key>match</key>
								<string>\b([a-zA-Z_$][a-zA-Z_$0-9]*)\b</string>
								<key>name</key>
								<string>variable.other.module.js</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>comment</key>
						<string>{ member1 , member2 as alias2 , [...] }</string>
						<key>begin</key>
						<string>(?![a-zA-Z_$0-9])\{</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.modules.begin.js</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\}</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.modules.end.js</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>comment</key>
								<string>name as (default|alias)</string>
								<key>captures</key>
								<dict>
									<key>1</key>
									<dict>
										<key>name</key>
										<string>invalid.illegal.js</string>
									</dict>
									<key>2</key>
									<dict>
										<key>name</key>
										<string>variable.other.module.js</string>
									</dict>
									<key>3</key>
									<dict>
										<key>name</key>
										<string>keyword.control.js</string>
									</dict>
									<key>4</key>
									<dict>
										<key>name</key>
										<string>variable.language.default.js</string>
									</dict>
									<key>5</key>
									<dict>
										<key>name</key>
										<string>invalid.illegal.js</string>
									</dict>
									<key>6</key>
									<dict>
										<key>name</key>
										<string>variable.other.module-alias.js</string>
									</dict>
								</dict>
								<key>match</key>
								<string>(?x) (?: \b(default)\b | \b([a-zA-Z_$][a-zA-Z_$0-9]*)\b) \s* (\b as \b) \s* (?: \b(default)\b | (\*) | \b([a-zA-Z_$][a-zA-Z_$0-9]*)\b)</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#comments</string>
							</dict>
							<dict>
								<key>match</key>
								<string>,</string>
								<key>name</key>
								<string>meta.delimiter.object.comma.js</string>
							</dict>
							<dict>
								<key>match</key>
								<string>\b([a-zA-Z_$][a-zA-Z_$0-9]*)\b</string>
								<key>name</key>
								<string>variable.other.module.js</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>match</key>
						<string>\*(?=.*\bfrom\b)</string>
						<key>name</key>
						<string>variable.language.import-all.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\b(default)\b</string>
						<key>name</key>
						<string>variable.language.default.js</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#strings</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#comments</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\b(from)\b</string>
						<key>name</key>
						<string>keyword.control.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\b([a-zA-Z_$][a-zA-Z_$0-9]*)\b</string>
						<key>name</key>
						<string>variable.other.module.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>,</string>
						<key>name</key>
						<string>meta.delimiter.object.comma.js</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#operators</string>
					</dict>
				</array>
				<key>end</key>
				<string>(?=;|\bfunction\b|\bclass\b|\blet\b|\bvar\b|\bconst\b|$)</string>
				<key>name</key>
				<string>meta.export.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\.)\b(super|this)(?!\s*:)\b|(?&lt;=\?)(?:\s*)(super|this)(?=\s*:)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>variable.language.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>variable.language.js</string>
					</dict>
				</dict>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>support.class.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>support.constant.js</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.assignment.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>match stuff like: Sound.prototype = { … } when extending an object</string>
				<key>match</key>
				<string>([a-zA-Z_?.$][\w?.$]*)\.(prototype)\s*(=)\s*</string>
				<key>name</key>
				<string>meta.class.js</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>([a-zA-Z_?.$][\w?.$]*)\.(prototype)\.([a-zA-Z_?.$][\w?.$]*)\s*(=)\s*(?:(async)(?:\s+))?(function\*?)\s*(\*?)(\()</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>support.class.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>support.constant.js</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.assignment.js</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.js</string>
					</dict>
					<key>6</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.js</string>
					</dict>
					<key>7</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.js</string>
					</dict>
					<key>8</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.begin.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>match stuff like: Sound.prototype.play = function() { … }</string>
				<key>end</key>
				<string>(\))</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.end.js</string>
					</dict>
				</dict>
				<key>name</key>
				<string>meta.function.prototype.js</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#function-params</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>support.class.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>support.constant.js</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.assignment.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>match stuff like: Sound.prototype.play = myfunc</string>
				<key>match</key>
				<string>([a-zA-Z_?.$][\w?.$]*)\.(prototype)\.([a-zA-Z_?.$][\w?.$]*)\s*(=)\s*</string>
				<key>name</key>
				<string>meta.function.js</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>([a-zA-Z_?.$][\w?.$]*)\.([a-zA-Z_?.$][\w?.$]*)\s*(=)\s*(?:(async)(?:\s+))?(function\*?)\s*(\*?)\s*([a-zA-Z_?$][\w?$]*)?\s*(\()</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>support.class.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.assignment.js</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.js</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.js</string>
					</dict>
					<key>6</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.js</string>
					</dict>
					<key>7</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
					<key>8</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.begin.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>match stuff like: Sound.play = function() { … }</string>
				<key>end</key>
				<string>(\))</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.end.js</string>
					</dict>
				</dict>
				<key>name</key>
				<string>meta.function.js</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#function-params</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>([a-zA-Z_?$][\w?$]*)\s*(=)\s*(?:(async)(?:\s+))?(function\*?)\s*(\*?)\s*([a-zA-Z_?$][\w?$]*)?\s*(\()</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.assignment.js</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.js</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.js</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.js</string>
					</dict>
					<key>6</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
					<key>7</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.begin.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>match stuff like: play = function() { … }</string>
				<key>end</key>
				<string>(\))</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.end.js</string>
					</dict>
				</dict>
				<key>name</key>
				<string>meta.function.js</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#function-params</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\b(?:(async)(?:\s+))?(function\*?)\s*((\*)|(?:(?:\s+)(\*?[a-zA-Z_$][\w$]*)))?\s*(\()</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.js</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.js</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
					<key>6</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.begin.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>match regular function like: function myFunc(arg) { … }</string>
				<key>end</key>
				<string>(\))</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.end.js</string>
					</dict>
				</dict>
				<key>name</key>
				<string>meta.function.js</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#function-params</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\b([a-zA-Z_?.$][\w?.$]*)\s*(:)\s*\b(?:(async)(?:\s+))?(function\*?)\s*(\*?)\s*([a-zA-Z_?$][\w?$]*)?\s*(\()</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.assignment.js</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.js</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.js</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.js</string>
					</dict>
					<key>6</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
					<key>7</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.begin.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>match stuff like: foobar: function() { … }</string>
				<key>end</key>
				<string>(\))</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.end.js</string>
					</dict>
				</dict>
				<key>name</key>
				<string>meta.function.json.js</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#function-params</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?:((')([^']*?)('))|((")([^"]*?)(")))\s*(:)\s*\b(?:(async)(?:\s+))?(function\*?)\s*(\*?)\s*([a-zA-Z_?$][\w?$]*)?\s*(\()</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>string.quoted.single.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.js</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.js</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>string.quoted.double.js</string>
					</dict>
					<key>6</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.js</string>
					</dict>
					<key>7</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
					<key>8</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.js</string>
					</dict>
					<key>9</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.assignment.js</string>
					</dict>
					<key>10</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.js</string>
					</dict>
					<key>11</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.js</string>
					</dict>
					<key>12</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.js</string>
					</dict>
					<key>13</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
					<key>14</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.begin.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>Attempt to match "foo": function</string>
				<key>end</key>
				<string>(\))</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.end.js</string>
					</dict>
				</dict>
				<key>name</key>
				<string>meta.function.json.js</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#function-params</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\b(constructor)\s*(\()</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.constructor.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.begin.js</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(\))</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.end.js</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#function-params</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>include</key>
				<string>#methods</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?x)
\b(class)
(?:
	(?:\s+(extends)\s+([a-zA-Z_$][\w$]*))
	|
	(?:
		(?:\s+([a-zA-Z_$][\w$]*))
		(?:\s+(extends)\s+([a-zA-Z_$][\w$]*))?
	)
)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.type.class.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.js</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.js</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.js</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.js</string>
					</dict>
					<key>6</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.js</string>
					</dict>
				</dict>
				<key>name</key>
				<string>meta.class.js</string>
			</dict>
			<dict>
				<key>name</key>
				<string>meta.function.arrow.js</string>
				<key>begin</key>
				<string>(?&lt;![A-Za-z0-9])(\()(?=(?:[^\(\)]*)?\)\s*=&gt;)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.begin.js</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(\))\s*(=&gt;)</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.end.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>storage.type.arrow.js</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#function-params</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>comment</key>
				<string>match stuff like: play = (a,b) =&gt; { … }</string>
				<key>name</key>
				<string>meta.function.arrow.js</string>
				<key>begin</key>
				<string>([a-zA-Z_?$][\w?$]*)\s*(=)\s*(\()(?=(?:[^\(\)]*)?\)\s*=&gt;)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.assignment.js</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.begin.js</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(\))\s*(=&gt;)</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.end.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>storage.type.arrow.js</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#function-params</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>comment</key>
				<string>match stuff like: Sound.play = (a,b) =&gt; { … }</string>
				<key>name</key>
				<string>meta.function.arrow.js</string>
				<key>begin</key>
				<string>([a-zA-Z_?$]*)\.([a-zA-Z_?$][\w?$]*)\s*(=)\s*(\()(?=(?:[^\(\)]*)?\)\s*=&gt;)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>support.class.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.js</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.assignment.js</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.begin.js</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(\))\s*(=&gt;)</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.end.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>storage.type.arrow.js</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#function-params</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.new.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.instance.js</string>
					</dict>
				</dict>
				<key>match</key>
				<string>(new)\s+(\$?\w+(?:\.\w*)?)</string>
				<key>name</key>
				<string>meta.class.instance.constructor</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(console)\b</string>
				<key>name</key>
				<string>entity.name.type.object.js.console</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(\.)(assert|clear|debug|error|info|log|profile|profileEnd|time|timeEnd|warn)(?=\()</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>meta.delimiter.method.period.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>support.function.js.console</string>
					</dict>
				</dict>
			</dict>
			<dict>
				<key>include</key>
				<string>#object_variable</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#numbers</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#strings</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#comments</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.html.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.html.js</string>
					</dict>
				</dict>
				<key>match</key>
				<string>(&lt;!--|--&gt;)</string>
				<key>name</key>
				<string>comment.block.html.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>=&gt;</string>
				<key>name</key>
				<string>storage.type.arrow.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\.)\b(class|enum|function|interface)(?!\s*:)\b</string>
				<key>name</key>
				<string>storage.type.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\.)\b(async|export|extends|implements|private|protected|public|static)(?!\s*:)\b</string>
				<key>name</key>
				<string>storage.modifier.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\.)\b(let|var)(?!\s*:)\b</string>
				<key>name</key>
				<string>storage.type.var.js</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&lt;!\.)\b(const)(?!\s*:)\b</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.js</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(\bof\b|\bin\b)|(;)|(=)|(?&lt;!,)\n</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.$1.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.terminator.statement.js</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.assignment.js</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>([$_a-zA-Z][$_a-zA-Z0-9]*)\s*(:)\s*([$_a-zA-Z][$_a-zA-Z0-9]*)?</string>
						<key>captures</key>
						<dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.assignment.js</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>constant.other.js</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>match</key>
						<string>([$_a-zA-Z][$_a-zA-Z0-9]*)</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>constant.other.js</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>match</key>
						<string>\.\.\.</string>
						<key>name</key>
						<string>keyword.operator.spread.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>,</string>
						<key>name</key>
						<string>meta.delimiter.object.comma.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\(|\)</string>
						<key>name</key>
						<string>meta.brace.round.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>{|}</string>
						<key>name</key>
						<string>meta.brace.curly.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\[|\]</string>
						<key>name</key>
						<string>meta.brace.square.js</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#comments</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\.)\b(yield)(?!\s*:)\b(?:\s*(\*))?|(?&lt;=\?)(?:\s*)(yield)(?=\s*:)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.js</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>keyword.control.js</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.js</string>
					</dict>
				</dict>
				<key>name</key>
				<string>meta.control.yield.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\.)\b(await|break|case|catch|continue|do|else|finally|for|if|import|from|package|return|switch|throw|try|while|with)(?!\s*:)\b</string>
				<key>name</key>
				<string>keyword.control.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\.)\b(default)\b</string>
				<key>name</key>
				<string>keyword.control.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\.)\b(delete|in|of|instanceof|new|typeof|void)(?!\s*:)\b</string>
				<key>name</key>
				<string>keyword.operator.$1.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\.\.\.</string>
				<key>name</key>
				<string>keyword.operator.spread.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\.)\b(true|false)(?!\s*:)\b|(?&lt;=\?)(?:\s*)(true|false)(?=\s*:)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>constant.language.boolean.$1.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>constant.language.boolean.$2.js</string>
					</dict>
				</dict>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\.)\b(null)(?!\s*:)\b|(?&lt;=\?)(?:\s*)(null)(?=\s*:)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>constant.language.null.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>constant.language.null.js</string>
					</dict>
				</dict>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\.)\b([A-Z][A-Z0-9_]+)(?!\s*:)\b|(?&lt;=\?)(?:\s*)([A-Z][A-Z0-9_]+)(?=\s*:)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>constant.other.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>constant.other.js</string>
					</dict>
				</dict>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\.)\b(debugger)(?!\s*:)\b|(?&lt;=\?)(?:\s*)(debugger)(?=\s*:)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.other.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>keyword.other.js</string>
					</dict>
				</dict>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\$)\b(Anchor|Applet|Area|Array|Boolean|Button|Checkbox|Date|document|event|FileUpload|Form|Frame|Function|Hidden|History|Image|JavaArray|JavaClass|JavaObject|JavaPackage|java|Layer|Link|Location|Math|MimeType|Number|navigator|netscape|Object|Option|Packages|Password|Plugin|Radio|RegExp|Reset|Select|String|Style|Submit|Symbol|screen|sun|Text|Textarea|window|XMLHttpRequest)\b</string>
				<key>name</key>
				<string>support.class.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(\.)?(shift|showModelessDialog|showModalDialog|showHelp|scroll|scrollX|scrollByPages|scrollByLines|scrollY|scrollTo|stop|strike|sin|sizeToContent|sidebar|signText|sort|sup|sub|substr|substring|splice|split|send|set(Milliseconds|Seconds|Minutes|Hours|Month|Year|FullYear|Date|UTC(Milliseconds|Seconds|Minutes|Hours|Month|FullYear|Date)|Time|Hotkeys|Cursor|Timeout|Interval|ZOptions|Active|Resizable|RequestHeader)|search|sqrt|slice|savePreferences|small|home|handleEvent|navigate|char|charCodeAt|charAt|cos|concat|contextual|confirm|compile|ceil|clear|clearTimeout|clearInterval|captureEvents|call|createStyleSheet|createPopup|createEventObject|to(GMTString|UTCString|String|Source|UpperCase|LowerCase|LocaleString)|test|tan|taint|taintEnabled|isNaN|isFinite|indexOf|italics|disableExternalCapture|dump|detachEvent|unshift|untaint|unescape|unwatch|updateCommands|join|javaEnabled|pop|pow|push|plugins.refresh|paddings|parse|parseInt|parseFloat|print|prompt|preference|escape|enableExternalCapture|eval|elementFromPoint|exp|exec|execScript|execCommand|valueOf|UTC|queryCommandState|queryCommandIndeterm|queryCommandEnabled|queryCommandValue|find|file|fileModifiedDate|fileSize|fileCreatedDate|fileUpdatedDate|fixed|fontsize|fontcolor|forward|floor|fromCharCode|watch|link|load|log|lastIndexOf|asin|anchor|acos|attachEvent|atob|atan|atan2|apply|alert|abs|abort|round|routeEvents|resize|resizeBy|resizeTo|recalc|returnValue|replace|reverse|reload|releaseCapture|releaseEvents|random|go|get(Milliseconds|Seconds|Minutes|Hours|Month|Day|Year|FullYear|Time|Date|TimezoneOffset|UTC(Milliseconds|Seconds|Minutes|Hours|Day|Month|FullYear|Date)|Attention|Selection|ResponseHeader|AllResponseHeaders)|min|moveBy|moveBelow|moveTo|moveToAbsolute|moveAbove|mergeAttributes|match|margins|max|btoa|big|bold|borderWidths|blink|back)\b(?=\()</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>meta.delimiter.method.period.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>support.function.js</string>
					</dict>
				</dict>
			</dict>
			<dict>
				<key>match</key>
				<string>(\.)(substringData|submit|splitText|setNamedItem|setAttribute|setAttributeNode|select|hasChildNodes|hasFeature|namedItem|click|close|cloneNode|createComment|createCDATASection|createCaption|createTHead|createTextNode|createTFoot|createDocumentFragment|createProcessingInstruction|createEntityReference|createElement|createAttribute|tabIndex|insertRow|insertBefore|insertCell|insertData|item|open|deleteRow|deleteCell|deleteCaption|deleteTHead|deleteTFoot|deleteData|focus|write|writeln|add|appendChild|appendData|reset|replaceChild|replaceData|move|moveNamedItem|moveChild|moveAttribute|moveAttributeNode|getNamedItem|getElementsByName|getElementsByTagName|getElementById|getAttribute|getAttributeNode|blur)\b(?=\()</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>meta.delimiter.method.period.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>support.function.dom.js</string>
					</dict>
				</dict>
			</dict>
			<dict>
				<key>match</key>
				<string>(\.)(systemLanguage|scripts|scrollbars|screenX|screenY|screenTop|screenLeft|style|styleSheets|status|statusText|statusbar|siblingBelow|siblingAbove|source|suffixes|security|securityPolicy|selection|self|history|host|hostname|hash|hasFocus|XMLDocument|XSLDocument|next|namespaces|namespaceURI|nameProp|MIN_VALUE|MAX_VALUE|characterSet|constructor|controllers|cookieEnabled|colorDepth|components|complete|current|cpuClass|clip|clipBoardData|clientInformation|closed|classes|callee|caller|crypto|toolbar|top|textTransform|textIndent|textDecoration|textAlign|tags|SQRT1_2|SQRT2|innerHeight|innerWidth|input|ids|ignoreCase|zIndex|oscpu|onreadystatechange|onLine|outerHeight|outerWidth|opsProfile|opener|offscreenBuffering|NEGATIVE_INFINITY|display|dialogHeight|dialogTop|dialogWidth|dialogLeft|dialogArguments|directories|description|defaultStatus|defaultChecked|defaultCharset|defaultView|userProfile|userLanguage|userAgent|uniqueID|undefined|updateInterval|_content|pixelDepth|port|personalbar|pkcs11|plugins|platform|pathname|paddingRight|paddingBottom|paddingTop|paddingLeft|parent|parentWindow|parentLayer|pageX|pageXOffset|pageY|pageYOffset|protocol|prototype|product|productSub|prompter|previous|prefix|encoding|enabledPlugin|external|expando|embeds|visiblity|vendor|vendorSub|vLinkcolor|URLUnencoded|PI|POSITIVE_INFINITY|filename|fontSize|fontFamily|fontWeight|formName|frames|frameElement|fgColor|E|whiteSpace|listStyleType|lineHeight|linkColor|location|locationbar|localName|lowsrc|length|left|leftContext|lastModified|lastMatch|lastIndex|lastParen|layers|layerX|language|appMinorVersion|appName|appCodeName|appCore|appVersion|availHeight|availTop|availWidth|availLeft|all|arity|arguments|aLinkcolor|above|right|rightContext|responseXML|responeText|readyState|global|x|y|z|mimeTypes|multiline|menubar|marginRight|marginBottom|marginTop|marginLeft|LN10|LN2|LOG10E|LOG2E|bottom|border(Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth)|bufferDepth|below|backgroundColor|backgroundImage)\b</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>meta.delimiter.property.period.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>support.constant.js</string>
					</dict>
				</dict>
			</dict>
			<dict>
				<key>match</key>
				<string>(\.)(shape|systemId|scheme|scope|scrolling|standby|start|size|summary|specified|sectionRowIndex|selected|selectedIndex|hspace|httpEquiv|htmlFor|height|headers|href|hreflang|noResize|notations|notationName|noShade|noHref|nodeName|nodeType|nodeValue|noWrap|nextSibling|name|ch|childNodes|chOff|checked|charset|cite|content|cookie|cords|code|codeBase|codeType|cols|colSpan|color|compact|cells|cellSpacing|cellPadding|clear|className|caption|type|tBodies|title|tHead|text|target|tagName|tFoot|isMap|index|id|implementation|images|options|ownerDocument|object|disabled|dir|doctype|documentElement|docmain|declare|defer|defaultSelected|defaultChecked|defaultValue|dateTime|data|useMap|publicId|parentNode|profile|profileend|prompt|previousDibling|enctype|entities|event|elements|vspace|version|value|valueType|vLink|vAlign|URL|firstChild|form|forms|face|frame|frameBorder|width|link|links|longDesc|lowSrc|lastChild|lang|label|anchors|accessKey|accept|acceptCharset|action|attributes|applets|alt|align|archive|areas|axis|aLink|abbr|rows|rowSpan|rowIndex|rules|rev|referrer|rel|readOnly|multiple|method|media|marginHeight|marginWidth|maxLength|body|border|background|bgColor)\b</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>meta.delimiter.property.period.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>support.constant.dom.js</string>
					</dict>
				</dict>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(ELEMENT_NODE|ATTRIBUTE_NODE|TEXT_NODE|CDATA_SECTION_NODE|ENTITY_REFERENCE_NODE|ENTITY_NODE|PROCESSING_INSTRUCTION_NODE|COMMENT_NODE|DOCUMENT_NODE|DOCUMENT_TYPE_NODE|DOCUMENT_FRAGMENT_NODE|NOTATION_NODE|INDEX_SIZE_ERR|DOMSTRING_SIZE_ERR|HIERARCHY_REQUEST_ERR|WRONG_DOCUMENT_ERR|INVALID_CHARACTER_ERR|NO_DATA_ALLOWED_ERR|NO_MODIFICATION_ALLOWED_ERR|NOT_FOUND_ERR|NOT_SUPPORTED_ERR|INUSE_ATTRIBUTE_ERR)\b</string>
				<key>name</key>
				<string>support.constant.dom.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\bon(Rowsinserted|Rowsdelete|Rowenter|Rowexit|Resize|Resizestart|Resizeend|Reset|Readystatechange|Mouseout|Mouseover|Mousedown|Mouseup|Mousemove|Before(cut|deactivate|unload|update|paste|print|editfocus|activate)|Blur|Scrolltop|Submit|Select|Selectstart|Selectionchange|Hover|Help|Change|Contextmenu|Controlselect|Cut|Cellchange|Clock|Close|Deactivate|Datasetchanged|Datasetcomplete|Dataavailable|Drop|Drag|Dragstart|Dragover|Dragdrop|Dragenter|Dragend|Dragleave|Dblclick|Unload|Paste|Propertychange|Error|Errorupdate|Keydown|Keyup|Keypress|Focus|Load|Activate|Afterupdate|Afterprint|Abort)\b</string>
				<key>name</key>
				<string>support.function.event-handler.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\.)\b(require)(?!\s*:)\b</string>
				<key>name</key>
				<string>support.function.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?&lt;!\.)\b(module|exports|__filename|__dirname|global|process)(?!\s*:)\b|(?&lt;=\?)(?:\s*)(module|exports|__filename|__dirname|global|process)(?=\s*:)</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>support.variable.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>support.variable.js</string>
					</dict>
				</dict>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(Infinity|NaN|undefined)\b</string>
				<key>name</key>
				<string>constant.language.js</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?&lt;=[\[=(?:+,!]|^|return|&amp;&amp;|\|\|)\s*(/)(?![/*+{}?])(?=.*/)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.begin.js</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(/)[gimuy]*</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.end.js</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.regexp.js</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>source.js.regexp</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>include</key>
				<string>#operators</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#method_call</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#function_call</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#properties</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\;</string>
				<key>name</key>
				<string>punctuation.terminator.statement.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>,</string>
				<key>name</key>
				<string>meta.delimiter.object.comma.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\.</string>
				<key>name</key>
				<string>meta.delimiter.method.period.js</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.begin.js</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.end.js</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>Allows the special return snippet to fire.</string>
				<key>match</key>
				<string>({)(})</string>
			</dict>
			<dict>
				<key>match</key>
				<string>{|}</string>
				<key>name</key>
				<string>meta.brace.curly.js</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>\(</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>meta.brace.round.js</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\)</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>meta.brace.round.js</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>$self</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>match</key>
				<string>\[|\]</string>
				<key>name</key>
				<string>meta.brace.square.js</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\A#!.*$</string>
				<key>name</key>
				<string>comment.line.shebang.js</string>
			</dict>
		</array>
		<key>repository</key>
		<dict>
			<key>numbers</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>\b(?&lt;!\$|_)((0(x|X)[0-9a-fA-F]+)|(0(b|B)[01]+)|(0(o|O)[0-7]+)|([0-9]+(\.[0-9]+)?)((e|E)[+-]?[0-9]+)?)\b</string>
						<key>name</key>
						<string>constant.numeric.js</string>
					</dict>
				</array>
			</dict>
			<key>operators</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>%=|\+=|-=|\*=|(?&lt;!\()/=</string>
						<key>name</key>
						<string>keyword.operator.assignment.compound.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>&amp;=|\^=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|\|=</string>
						<key>name</key>
						<string>keyword.operator.assignment.compound.bitwise.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>!==|!=|&lt;=|&gt;=|===|==|&lt;|&gt;</string>
						<key>name</key>
						<string>keyword.operator.comparison.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>&amp;&amp;|!|\|\|</string>
						<key>name</key>
						<string>keyword.operator.logical.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>&amp;|\||\^|~</string>
						<key>name</key>
						<string>keyword.operator.bitwise.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\?|:</string>
						<key>name</key>
						<string>keyword.operator.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>=</string>
						<key>name</key>
						<string>keyword.operator.assignment.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>--</string>
						<key>name</key>
						<string>keyword.operator.decrement.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\+\+</string>
						<key>name</key>
						<string>keyword.operator.increment.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>%|\*|/|-|\+</string>
						<key>name</key>
						<string>keyword.operator.js</string>
					</dict>
				</array>
			</dict>
			<key>strings</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>'</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.begin.js</string>
							</dict>
						</dict>
						<key>end</key>
						<string>'</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.end.js</string>
							</dict>
						</dict>
						<key>name</key>
						<string>string.quoted.single.js</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>match</key>
								<string>\\(x\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
								<key>name</key>
								<string>constant.character.escape.js</string>
							</dict>
							<dict>
								<key>match</key>
								<string>[^']*[^\n\r'\\]$</string>
								<key>name</key>
								<string>invalid.illegal.string.js</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>"</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.begin.js</string>
							</dict>
						</dict>
						<key>end</key>
						<string>"</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.end.js</string>
							</dict>
						</dict>
						<key>name</key>
						<string>string.quoted.double.js</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>match</key>
								<string>\\(x\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
								<key>name</key>
								<string>constant.character.escape.js</string>
							</dict>
							<dict>
								<key>match</key>
								<string>[^"]*[^\n\r"\\]$</string>
								<key>name</key>
								<string>invalid.illegal.string.js</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>`</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.begin.js</string>
							</dict>
						</dict>
						<key>end</key>
						<string>`</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.end.js</string>
							</dict>
						</dict>
						<key>name</key>
						<string>string.quoted.template.js</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>match</key>
								<string>\\(x\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
								<key>name</key>
								<string>constant.character.escape.js</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#interpolated_js</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>methods</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>meta.method.js</string>
						<key>comment</key>
						<string>match regular function like: function myFunc(arg) { … }</string>
						<key>begin</key>
						<string>\b((?!(?:break|case|catch|continue|do|else|finally|for|function|if|export|import|package|return|switch|throw|try|while|with)[\s\(])(?:[a-zA-Z_$][a-zA-Z_$0-9]*))\s*(\()(?=(?:[^\(\)]*)?\)\s*\{)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>entity.name.function.js</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.parameters.begin.js</string>
							</dict>
						</dict>
						<key>end</key>
						<string>(\))</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.parameters.end.js</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#function-params</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#strings</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>function-params</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#numbers</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#strings</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\(|\)</string>
						<key>name</key>
						<string>meta.brace.round.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>\[|\]</string>
						<key>name</key>
						<string>meta.brace.square.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>{|}</string>
						<key>name</key>
						<string>meta.brace.curly.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>,</string>
						<key>name</key>
						<string>meta.object.delimiter.js</string>
					</dict>
					<dict>
						<key>match</key>
						<string>=</string>
						<key>name</key>
						<string>keyword.operator.assignment.js</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#comments</string>
					</dict>
					<dict>
						<key>match</key>
						<string>[a-zA-Z_$][a-zA-Z_$0-9]*</string>
						<key>name</key>
						<string>variable.parameter.function.js</string>
					</dict>
				</array>
			</dict>
			<key>arguments</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>$self</string>
					</dict>
				</array>
			</dict>
			<key>method_call</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>.methodCall(arg1, "arg2", [...])</string>
						<key>begin</key>
						<string>(\.)([a-zA-Z_$][\w$]*)\s*(\()</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>meta.delimiter.method.period.js</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.function.js</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.arguments.begin.js</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\)</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.arguments.end.js</string>
							</dict>
						</dict>
						<key>name</key>
						<string>meta.method-call.js</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#arguments</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>function_call</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>functionCall(arg1, "arg2", [...])</string>
						<key>begin</key>
						<string>(?:(\d\w*)|([a-zA-Z_$][\w$]*))\s*(\()</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>invalid.illegal.js</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.name.function.js</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.arguments.begin.js</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\)</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.arguments.end.js</string>
							</dict>
						</dict>
						<key>name</key>
						<string>meta.function-call.js</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#arguments</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>object_variable</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>`obj` in `obj.prop`, `obj.methodCall()`</string>
						<key>match</key>
						<string>(?:([a-zA-Z_$][\w$]*)|(\d\w*))(?=\s*\.\s*[a-zA-Z_$]\w*)</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>variable.other.object.js</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>invalid.illegal.js</string>
							</dict>
						</dict>
					</dict>
				</array>
			</dict>
			<key>properties</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>`prop` in `obj.prop`, `func().prop`</string>
						<key>match</key>
						<string>(\.)\s*(?:(\b\d\w*)|([A-Z][A-Z0-9_$]*\b\$*)|([\w$]*))</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>meta.delimiter.property.period.js</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>invalid.illegal.js</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>constant.other.property.js</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>variable.other.property.js</string>
							</dict>
						</dict>
					</dict>
				</array>
			</dict>
			<key>interpolated_js</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>\$\{</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.section.embedded.js</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\}</string>
						<key>name</key>
						<string>source.js.embedded.source</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>begin</key>
								<string>{</string>
								<key>beginCaptures</key>
								<dict>
									<key>0</key>
									<dict>
										<key>name</key>
										<string>meta.brace.curly.js</string>
									</dict>
								</dict>
								<key>end</key>
								<string>}</string>
								<key>endCaptures</key>
								<dict>
									<key>0</key>
									<dict>
										<key>name</key>
										<string>meta.brace.curly.js</string>
									</dict>
								</dict>
								<key>patterns</key>
								<array>
									<dict>
										<key>include</key>
										<string>$self</string>
									</dict>
								</array>
							</dict>
							<dict>
								<key>include</key>
								<string>$self</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>docblock</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>(?&lt;!\w)@(abstract|access|alias|augments|author|async|attribute|arg|argument|beta|borrows|bubbes|callback|class|classdesc|config|const|constant|constructs|constructor|copyright|chainable|default|defaultvalue|deprecated|desc|description|enum|emits|event|example|exports|external|extends|extension|extensionfor|extension_for|for|file|fileoverview|fires|final|function|global|host|ignore|implements|inheritdoc|inner|instance|interface|kind|lends|license|listens|main|member|memberof|method|mixex|mixin(?:s|)|module|name|namespace|override|overview|param|private|prop|property|protected|readonly|readOnly|requires|required|return|returns|see|since|static|summary|submodule|this|throws|todo|tutorial|type|typedef|var|variation|version|virtual|uses|writeOnce)\b</string>
						<key>name</key>
						<string>storage.type.class.jsdoc</string>
					</dict>
				</array>
			</dict>
			<key>comments</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>/\*\*(?!/)</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.comment.js</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#docblock</string>
							</dict>
						</array>
						<key>end</key>
						<string>\*/</string>
						<key>name</key>
						<string>comment.block.documentation.js</string>
					</dict>
					<dict>
						<key>begin</key>
						<string>/\*</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.comment.js</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\*/</string>
						<key>name</key>
						<string>comment.block.js</string>
					</dict>
					<dict>
						<key>begin</key>
						<string>(^[ \t]+)?(?=//)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.whitespace.comment.leading.js</string>
							</dict>
						</dict>
						<key>end</key>
						<string>(?!\G)</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>begin</key>
								<string>//</string>
								<key>beginCaptures</key>
								<dict>
									<key>0</key>
									<dict>
										<key>name</key>
										<string>punctuation.definition.comment.js</string>
									</dict>
								</dict>
								<key>end</key>
								<string>\n</string>
								<key>name</key>
								<string>comment.line.double-slash.js</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
		</dict>
	</dict>
</plist>